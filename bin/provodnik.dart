import 'dart:io';
import 'package:filesize/filesize.dart';
import 'utils.dart';

class Provodnik with Utils {
  menu() {
    print('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –Ω–∞—à –ø—Ä–æ–≤–æ–¥–Ω–∏–∫');
    print('--------------------------------------');
    print("""–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å–∫:
    1.–°
    2.D
    3. –í–≤–µ—Å—Ç–∏ –ø—É—Ç—å –≤—Ä—É—á–Ω—É—é: """);
    int a = int.parse(stdin.readLineSync()!);
    switch (a) {
      case 1:
        viewFolders('C:');
        break;
      case 2:
        viewFolders('D:');
        break;
      case 3:
        String path = stdin.readLineSync()!;
        viewFolders(path);
        break;
      default:
        print('–ù–µ—Ç —Ç–∞–∫–æ–π –º–µ–Ω—é. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        exit(0);
    }
  }

  void viewFolders(String path) async {
    try {
      int f = 1;
      // Utf8.decode("asd".codeUnits)
      var directory = Directory(path);
      List<FileSystemEntity> fSEntity = directory.listSync();

      fSEntity.sort((((a, b) => a
          .statSync()
          .type
          .toString()
          .compareTo(b.statSync().type.toString()))));

      print("   –ù–æ–º–µ—Ä  |  –¢–∏–ø    |  –ò–º—è           |  –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞");

      for (int i = 0; i < fSEntity.length; i++) {
        var sizefile = filesize(fSEntity[i].statSync().size);

        if (fSEntity[i] is Directory) {
          print(
              """       ${f++}  üìò –ü–∞–ø–∫–∞  -- ${fSEntity[i].toString().replaceAll("\\", '/').split("'")[1].split('/').last} """);
        } else {
          print("""       ${f++}  üìù –§–∞–π–ª  -- ${fSEntity[i].toString().replaceAll("\\", '/').split("'")[1].split('/').last}  | $sizefile""");
        }
      }

      print('–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–±–µ—Ä–∏—Ç–µ "0"');
      print('–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–∞–±–µ—Ä–∏—Ç–µ "z"');
      print("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä: ");
      String a = stdin.readLineSync()!;

      if (a.toLowerCase() == 'z') {
        exit(0);
      }

      int selectedNum = int.parse(a);
      if (selectedNum == 0) {
        //–Ω–∞–∑–∞–¥

        viewFolders(path.back());
      } else {
        if (selectedNum >= fSEntity.length) {
          print("–ù–µ—Ç —Ç–∞–∫–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏");
          exit(0);
        }
        if (fSEntity[selectedNum - 1] is Directory) {
          // –≤–æ–π—Ç–∏ –≤–Ω—É—Ç—Ä—å
          viewFolders(fSEntity[selectedNum - 1]
              .toString()
              .replaceAll('\\', "/")
              .split("'")[1]);
        } else if (fSEntity[selectedNum] is File) {
          print("–≠—Ç–æ —Ñ–∞–π–ª. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");

          exit(0);
        }
      }
    } on FileSystemException {
      print("–û—à–∏–±–∫–∞!!! –Ω–µ—Ç —Ç–æ–∫–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏");
    } catch (e) {
      print("–û—à–∏–±–∫–∞: $e");
    }
  }
}
